#!/usr/bin/env php
<?php

declare(strict_types=1);

/**
 * This file is part of PHPUnit Coverage Check.
 *
 * (c) Eric Sizemore <admin@secondversion.com>
 * (c) Richard Regeer <rich2309@gmail.com>
 *
 * This source file is subject to the MIT license. For the full copyright,
 * license information, and credits/acknowledgements, please view the LICENSE
 * and README files that were distributed with this source code.
 */
/**
 * Attempt to load dependencies.
 *
 * Based on the autoloading logic from infection/infection.
 *
 * @see https://github.com/infection/infection/blob/master/bin/infection#L50
 */
(static function (): void {
    $possibleLocations = [
        //$GLOBALS['_composer_autoload_path'] ?? '',
        __DIR__ . '/../../../autoload.php',
        __DIR__ . '/../vendor/autoload.php',
    ];

    $loader = null;

    /**
     * @var string $possibleLocation
     */
    foreach ($possibleLocations as $possibleLocation) {
        if ($possibleLocation !== '' && file_exists($possibleLocation)) {
            $loader = $possibleLocation;

            break;
        }
    }

    if ($loader !== null) {
        include_once $loader;

        return;
    }

    fwrite(
        STDERR,
        <<<'ERROR'
            You need to set up the project dependencies using Composer:
                $ composer install
            You can learn all about Composer on https://getcomposer.org/.

            ERROR,
    );

    throw new RuntimeException('Unable to find the Composer autoloader.');
})();

// Project (third-party) autoloading.
(static function (): void {
    $autoload = getcwd() . '/vendor/autoload.php';

    if (file_exists($autoload)) {
        require_once $autoload;
    }
})();

// Setup application
use Esi\CoverageCheck\Application;
use Esi\CoverageCheck\Command\CoverageCheckCommand;
use Esi\CoverageCheck\CoverageCheck;

$command     = new CoverageCheckCommand(new CoverageCheck());
$commandName = $command->getName() ?? 'coverage:check';

$console = new Application();
$console->add($command);
$console->setDefaultCommand($commandName, true);
$console->run();
